// swiftlint:disable all
/**
 * Â© 2013 - 2024 Tinder, Inc., ALL RIGHTS RESERVED
 * Tinder Obsidian v10.11.1-ios.4
 * Do not edit directly
 * Generated on Thu, 05 Sep 2024 16:14:02 GMT
 */

import ObsidianDataModel
import UIKit

public extension Key where Output == UIColor {
    static let invertibleWhite: Key = .init(name: "invertibleWhite")
    static let invertibleBlack: Key = .init(name: "invertibleBlack")
    static let invertibleGray10: Key = .init(name: "invertibleGray10")
    static let invertibleGray15: Key = .init(name: "invertibleGray15")
    static let invertibleGray20: Key = .init(name: "invertibleGray20")
    static let invertibleGray30: Key = .init(name: "invertibleGray30")
    static let invertibleGray40: Key = .init(name: "invertibleGray40")
    static let invertibleGray50: Key = .init(name: "invertibleGray50")
    static let invertibleGray60: Key = .init(name: "invertibleGray60")
    static let invertibleGray70: Key = .init(name: "invertibleGray70")
    static let invertibleGray80: Key = .init(name: "invertibleGray80")
    static let invertibleGray90: Key = .init(name: "invertibleGray90")
    static let invertibleGray95: Key = .init(name: "invertibleGray95")
    static let invertibleGray05: Key = .init(name: "invertibleGray05")
    static let invertibleGreen10: Key = .init(name: "invertibleGreen10")
    static let invertibleGreen15: Key = .init(name: "invertibleGreen15")
    static let invertibleGreen20: Key = .init(name: "invertibleGreen20")
    static let invertibleGreen30: Key = .init(name: "invertibleGreen30")
    static let invertibleGreen40: Key = .init(name: "invertibleGreen40")
    static let invertibleGreen50: Key = .init(name: "invertibleGreen50")
    static let invertibleGreen60: Key = .init(name: "invertibleGreen60")
    static let invertibleGreen70: Key = .init(name: "invertibleGreen70")
    static let invertibleGreen80: Key = .init(name: "invertibleGreen80")
    static let invertibleGreen90: Key = .init(name: "invertibleGreen90")
    static let invertibleGreen95: Key = .init(name: "invertibleGreen95")
    static let invertibleGreen05: Key = .init(name: "invertibleGreen05")
    static let invertibleTeal10: Key = .init(name: "invertibleTeal10")
    static let invertibleTeal15: Key = .init(name: "invertibleTeal15")
    static let invertibleTeal20: Key = .init(name: "invertibleTeal20")
    static let invertibleTeal30: Key = .init(name: "invertibleTeal30")
    static let invertibleTeal40: Key = .init(name: "invertibleTeal40")
    static let invertibleTeal50: Key = .init(name: "invertibleTeal50")
    static let invertibleTeal60: Key = .init(name: "invertibleTeal60")
    static let invertibleTeal70: Key = .init(name: "invertibleTeal70")
    static let invertibleTeal80: Key = .init(name: "invertibleTeal80")
    static let invertibleTeal90: Key = .init(name: "invertibleTeal90")
    static let invertibleTeal95: Key = .init(name: "invertibleTeal95")
    static let invertibleTeal05: Key = .init(name: "invertibleTeal05")
    static let invertibleBlue10: Key = .init(name: "invertibleBlue10")
    static let invertibleBlue15: Key = .init(name: "invertibleBlue15")
    static let invertibleBlue20: Key = .init(name: "invertibleBlue20")
    static let invertibleBlue30: Key = .init(name: "invertibleBlue30")
    static let invertibleBlue40: Key = .init(name: "invertibleBlue40")
    static let invertibleBlue50: Key = .init(name: "invertibleBlue50")
    static let invertibleBlue60: Key = .init(name: "invertibleBlue60")
    static let invertibleBlue70: Key = .init(name: "invertibleBlue70")
    static let invertibleBlue80: Key = .init(name: "invertibleBlue80")
    static let invertibleBlue90: Key = .init(name: "invertibleBlue90")
    static let invertibleBlue95: Key = .init(name: "invertibleBlue95")
    static let invertibleBlue05: Key = .init(name: "invertibleBlue05")
    static let invertiblePurple10: Key = .init(name: "invertiblePurple10")
    static let invertiblePurple15: Key = .init(name: "invertiblePurple15")
    static let invertiblePurple20: Key = .init(name: "invertiblePurple20")
    static let invertiblePurple30: Key = .init(name: "invertiblePurple30")
    static let invertiblePurple40: Key = .init(name: "invertiblePurple40")
    static let invertiblePurple50: Key = .init(name: "invertiblePurple50")
    static let invertiblePurple60: Key = .init(name: "invertiblePurple60")
    static let invertiblePurple70: Key = .init(name: "invertiblePurple70")
    static let invertiblePurple80: Key = .init(name: "invertiblePurple80")
    static let invertiblePurple90: Key = .init(name: "invertiblePurple90")
    static let invertiblePurple95: Key = .init(name: "invertiblePurple95")
    static let invertiblePurple05: Key = .init(name: "invertiblePurple05")
    static let invertibleFuchsia10: Key = .init(name: "invertibleFuchsia10")
    static let invertibleFuchsia15: Key = .init(name: "invertibleFuchsia15")
    static let invertibleFuchsia20: Key = .init(name: "invertibleFuchsia20")
    static let invertibleFuchsia30: Key = .init(name: "invertibleFuchsia30")
    static let invertibleFuchsia40: Key = .init(name: "invertibleFuchsia40")
    static let invertibleFuchsia50: Key = .init(name: "invertibleFuchsia50")
    static let invertibleFuchsia60: Key = .init(name: "invertibleFuchsia60")
    static let invertibleFuchsia70: Key = .init(name: "invertibleFuchsia70")
    static let invertibleFuchsia80: Key = .init(name: "invertibleFuchsia80")
    static let invertibleFuchsia90: Key = .init(name: "invertibleFuchsia90")
    static let invertibleFuchsia95: Key = .init(name: "invertibleFuchsia95")
    static let invertibleFuchsia05: Key = .init(name: "invertibleFuchsia05")
    static let invertibleRed10: Key = .init(name: "invertibleRed10")
    static let invertibleRed15: Key = .init(name: "invertibleRed15")
    static let invertibleRed20: Key = .init(name: "invertibleRed20")
    static let invertibleRed30: Key = .init(name: "invertibleRed30")
    static let invertibleRed40: Key = .init(name: "invertibleRed40")
    static let invertibleRed50: Key = .init(name: "invertibleRed50")
    static let invertibleRed60: Key = .init(name: "invertibleRed60")
    static let invertibleRed70: Key = .init(name: "invertibleRed70")
    static let invertibleRed80: Key = .init(name: "invertibleRed80")
    static let invertibleRed90: Key = .init(name: "invertibleRed90")
    static let invertibleRed95: Key = .init(name: "invertibleRed95")
    static let invertibleRed05: Key = .init(name: "invertibleRed05")
    static let invertibleYellowOrange10: Key = .init(name: "invertibleYellowOrange10")
    static let invertibleYellowOrange15: Key = .init(name: "invertibleYellowOrange15")
    static let invertibleYellowOrange20: Key = .init(name: "invertibleYellowOrange20")
    static let invertibleYellowOrange30: Key = .init(name: "invertibleYellowOrange30")
    static let invertibleYellowOrange40: Key = .init(name: "invertibleYellowOrange40")
    static let invertibleYellowOrange50: Key = .init(name: "invertibleYellowOrange50")
    static let invertibleYellowOrange60: Key = .init(name: "invertibleYellowOrange60")
    static let invertibleYellowOrange70: Key = .init(name: "invertibleYellowOrange70")
    static let invertibleYellowOrange80: Key = .init(name: "invertibleYellowOrange80")
    static let invertibleYellowOrange90: Key = .init(name: "invertibleYellowOrange90")
    static let invertibleYellowOrange95: Key = .init(name: "invertibleYellowOrange95")
    static let invertibleYellowOrange05: Key = .init(name: "invertibleYellowOrange05")
    static let invertibleGold10: Key = .init(name: "invertibleGold10")
    static let invertibleGold15: Key = .init(name: "invertibleGold15")
    static let invertibleGold20: Key = .init(name: "invertibleGold20")
    static let invertibleGold30: Key = .init(name: "invertibleGold30")
    static let invertibleGold40: Key = .init(name: "invertibleGold40")
    static let invertibleGold50: Key = .init(name: "invertibleGold50")
    static let invertibleGold60: Key = .init(name: "invertibleGold60")
    static let invertibleGold70: Key = .init(name: "invertibleGold70")
    static let invertibleGold80: Key = .init(name: "invertibleGold80")
    static let invertibleGold90: Key = .init(name: "invertibleGold90")
    static let invertibleGold95: Key = .init(name: "invertibleGold95")
    static let invertibleGold05: Key = .init(name: "invertibleGold05")
    static let backgroundBadgeBrandDefault: Key = .init(name: "backgroundBadgeBrandDefault")
    static let backgroundBadgeNotificationInactive: Key = .init(name: "backgroundBadgeNotificationInactive")
    static let backgroundBadgeNotificationActive: Key = .init(name: "backgroundBadgeNotificationActive")
    static let backgroundBadgeVerifiedDefault: Key = .init(name: "backgroundBadgeVerifiedDefault")
    static let backgroundBadgeOnlineNowDefault: Key = .init(name: "backgroundBadgeOnlineNowDefault")
    static let iconBadgeVerified: Key = .init(name: "iconBadgeVerified")
    static let textBadgeNotificationDefault: Key = .init(name: "textBadgeNotificationDefault")
    static let textBadgeNotificationInactive: Key = .init(name: "textBadgeNotificationInactive")
    static let backgroundBannerDefault: Key = .init(name: "backgroundBannerDefault")
    static let iconBannerDefault: Key = .init(name: "iconBannerDefault")
    static let iconBannerDismiss: Key = .init(name: "iconBannerDismiss")
    static let textBannerHeading: Key = .init(name: "textBannerHeading")
    static let textBannerBody: Key = .init(name: "textBannerBody")
    static let dividerBannerDefault: Key = .init(name: "dividerBannerDefault")
    static let backgroundBottomSheetDefault: Key = .init(name: "backgroundBottomSheetDefault")
    static let backgroundButtonPrimarySmall: Key = .init(name: "backgroundButtonPrimarySmall")
    static let backgroundButtonPrimaryOverlay: Key = .init(name: "backgroundButtonPrimaryOverlay")
    static let backgroundButtonNeutral: Key = .init(name: "backgroundButtonNeutral")
    static let backgroundButtonDisabled: Key = .init(name: "backgroundButtonDisabled")
    static let backgroundButtonElevated: Key = .init(name: "backgroundButtonElevated")
    static let backgroundButtonSparksNeutral: Key = .init(name: "backgroundButtonSparksNeutral")
    static let backgroundButtonSparksExpandProfile: Key = .init(name: "backgroundButtonSparksExpandProfile")
    static let borderButtonSecondary: Key = .init(name: "borderButtonSecondary")
    static let borderButtonSecondaryOverlay: Key = .init(name: "borderButtonSecondaryOverlay")
    static let borderButtonSparksExpandProfile: Key = .init(name: "borderButtonSparksExpandProfile")
    static let borderButtonFocused: Key = .init(name: "borderButtonFocused")
    static let borderButtonFocusedOverlay: Key = .init(name: "borderButtonFocusedOverlay")
    static let foregroundButtonPrimary: Key = .init(name: "foregroundButtonPrimary")
    static let foregroundButtonPrimaryOverlay: Key = .init(name: "foregroundButtonPrimaryOverlay")
    static let foregroundButtonSecondary: Key = .init(name: "foregroundButtonSecondary")
    static let foregroundButtonSecondaryOverlay: Key = .init(name: "foregroundButtonSecondaryOverlay")
    static let foregroundButtonTertiary: Key = .init(name: "foregroundButtonTertiary")
    static let foregroundButtonTertiaryOverlay: Key = .init(name: "foregroundButtonTertiaryOverlay")
    static let foregroundButtonNeutral: Key = .init(name: "foregroundButtonNeutral")
    static let foregroundButtonDisabled: Key = .init(name: "foregroundButtonDisabled")
    static let foregroundButtonSparksExpandProfile: Key = .init(name: "foregroundButtonSparksExpandProfile")
    static let interactiveButtonPrimary: Key = .init(name: "interactiveButtonPrimary")
    static let interactiveButtonSecondary: Key = .init(name: "interactiveButtonSecondary")
    static let interactiveButtonTertiary: Key = .init(name: "interactiveButtonTertiary")
    static let interactiveButtonNeutral: Key = .init(name: "interactiveButtonNeutral")
    static let borderCard: Key = .init(name: "borderCard")
    static let backgroundChatBubbleSend: Key = .init(name: "backgroundChatBubbleSend")
    static let backgroundChatBubbleReceive: Key = .init(name: "backgroundChatBubbleReceive")
    static let textChatBubbleSend: Key = .init(name: "textChatBubbleSend")
    static let textChatBubbleReceive: Key = .init(name: "textChatBubbleReceive")
    static let backgroundCheckboxDisabled: Key = .init(name: "backgroundCheckboxDisabled")
    static let backgroundCheckboxSelectedEnabled: Key = .init(name: "backgroundCheckboxSelectedEnabled")
    static let borderCheckboxUnselectedEnabled: Key = .init(name: "borderCheckboxUnselectedEnabled")
    static let borderCheckboxUnselectedDisabled: Key = .init(name: "borderCheckboxUnselectedDisabled")
    static let borderCheckboxUnselectedError: Key = .init(name: "borderCheckboxUnselectedError")
    static let iconCheckboxSelectedEnabled: Key = .init(name: "iconCheckboxSelectedEnabled")
    static let iconCheckboxSelectedDisabled: Key = .init(name: "iconCheckboxSelectedDisabled")
    static let backgroundDatepickerSelected: Key = .init(name: "backgroundDatepickerSelected")
    static let textDatepickerInactive: Key = .init(name: "textDatepickerInactive")
    static let textDatepickerActive: Key = .init(name: "textDatepickerActive")
    static let iconFormDefault: Key = .init(name: "iconFormDefault")
    static let iconFormDisabled: Key = .init(name: "iconFormDisabled")
    static let iconFormError: Key = .init(name: "iconFormError")
    static let iconFormSuccess: Key = .init(name: "iconFormSuccess")
    static let textFormLabelDefault: Key = .init(name: "textFormLabelDefault")
    static let textFormHelpDefault: Key = .init(name: "textFormHelpDefault")
    static let textFormHelpSuccess: Key = .init(name: "textFormHelpSuccess")
    static let textFormHelpError: Key = .init(name: "textFormHelpError")
    static let textFormHelpDisabled: Key = .init(name: "textFormHelpDisabled")
    static let backgroundGamepadPrimaryDefault: Key = .init(name: "backgroundGamepadPrimaryDefault")
    static let backgroundGamepadPrimaryDisabled: Key = .init(name: "backgroundGamepadPrimaryDisabled")
    static let backgroundGamepadPrimaryDisabledOnSuperLike: Key = .init(name: "backgroundGamepadPrimaryDisabledOnSuperLike")
    static let backgroundGamepadSecondaryDefault: Key = .init(name: "backgroundGamepadSecondaryDefault")
    static let backgroundGamepadSecondaryDisabled: Key = .init(name: "backgroundGamepadSecondaryDisabled")
    static let backgroundGamepadSparksRewindDefault: Key = .init(name: "backgroundGamepadSparksRewindDefault")
    static let backgroundGamepadSparksNopeDefault: Key = .init(name: "backgroundGamepadSparksNopeDefault")
    static let backgroundGamepadSparksSuperLikeDefault: Key = .init(name: "backgroundGamepadSparksSuperLikeDefault")
    static let backgroundGamepadSparksLikeDefault: Key = .init(name: "backgroundGamepadSparksLikeDefault")
    static let backgroundGamepadSparksBoostDefault: Key = .init(name: "backgroundGamepadSparksBoostDefault")
    static let borderGamepadPrimaryDisabled: Key = .init(name: "borderGamepadPrimaryDisabled")
    static let borderGamepadPrimaryDisabledOnSuperLike: Key = .init(name: "borderGamepadPrimaryDisabledOnSuperLike")
    static let borderGamepadSecondaryDisabled: Key = .init(name: "borderGamepadSecondaryDisabled")
    static let borderGamepadRewindDefault: Key = .init(name: "borderGamepadRewindDefault")
    static let borderGamepadNopeDefault: Key = .init(name: "borderGamepadNopeDefault")
    static let borderGamepadSuperLikeDefault: Key = .init(name: "borderGamepadSuperLikeDefault")
    static let borderGamepadSuperLikeActive: Key = .init(name: "borderGamepadSuperLikeActive")
    static let borderGamepadSuperLikeDisabled: Key = .init(name: "borderGamepadSuperLikeDisabled")
    static let borderGamepadLikeDefault: Key = .init(name: "borderGamepadLikeDefault")
    static let borderGamepadBoostDefault: Key = .init(name: "borderGamepadBoostDefault")
    static let borderGamepadSparksRewindDefault: Key = .init(name: "borderGamepadSparksRewindDefault")
    static let borderGamepadSparksNopeDefault: Key = .init(name: "borderGamepadSparksNopeDefault")
    static let borderGamepadSparksSuperLikeDefault: Key = .init(name: "borderGamepadSparksSuperLikeDefault")
    static let borderGamepadSparksLikeDefault: Key = .init(name: "borderGamepadSparksLikeDefault")
    static let borderGamepadSparksBoostDefault: Key = .init(name: "borderGamepadSparksBoostDefault")
    static let iconGamepadPrimaryDisabled: Key = .init(name: "iconGamepadPrimaryDisabled")
    static let iconGamepadPrimaryDisabledOnSuperLike: Key = .init(name: "iconGamepadPrimaryDisabledOnSuperLike")
    static let iconGamepadPrimaryPressed: Key = .init(name: "iconGamepadPrimaryPressed")
    static let iconGamepadPrimarySuperLikeActive: Key = .init(name: "iconGamepadPrimarySuperLikeActive")
    static let iconGamepadPrimarySuperLikeDisabled: Key = .init(name: "iconGamepadPrimarySuperLikeDisabled")
    static let iconGamepadSecondaryDisabled: Key = .init(name: "iconGamepadSecondaryDisabled")
    static let iconGamepadSecondaryPressed: Key = .init(name: "iconGamepadSecondaryPressed")
    static let iconGamepadSparksRewindActive: Key = .init(name: "iconGamepadSparksRewindActive")
    static let iconGamepadSparksNopeActive: Key = .init(name: "iconGamepadSparksNopeActive")
    static let iconGamepadSparksSuperLikeActive: Key = .init(name: "iconGamepadSparksSuperLikeActive")
    static let iconGamepadSparksSuperLikeDisabled: Key = .init(name: "iconGamepadSparksSuperLikeDisabled")
    static let iconGamepadSparksLikeActive: Key = .init(name: "iconGamepadSparksLikeActive")
    static let iconGamepadSparksBoostActive: Key = .init(name: "iconGamepadSparksBoostActive")
    static let labelGamepadPrimaryCountSuperLike: Key = .init(name: "labelGamepadPrimaryCountSuperLike")
    static let labelGamepadPrimaryCountBoost: Key = .init(name: "labelGamepadPrimaryCountBoost")
    static let labelGamepadSecondaryCountSuperLike: Key = .init(name: "labelGamepadSecondaryCountSuperLike")
    static let labelGamepadSecondaryCountBoost: Key = .init(name: "labelGamepadSecondaryCountBoost")
    static let backgroundIconButtonSecondary: Key = .init(name: "backgroundIconButtonSecondary")
    static let backgroundIconButtonDisabled: Key = .init(name: "backgroundIconButtonDisabled")
    static let backgroundIconButtonOverlayDefault: Key = .init(name: "backgroundIconButtonOverlayDefault")
    static let backgroundIconButtonOverlayDisabled: Key = .init(name: "backgroundIconButtonOverlayDisabled")
    static let iconIconButtonPrimary: Key = .init(name: "iconIconButtonPrimary")
    static let iconIconButtonSecondary: Key = .init(name: "iconIconButtonSecondary")
    static let iconIconButtonDisabled: Key = .init(name: "iconIconButtonDisabled")
    static let iconIconButtonOverlayDefault: Key = .init(name: "iconIconButtonOverlayDefault")
    static let iconIconButtonOverlayDisabled: Key = .init(name: "iconIconButtonOverlayDisabled")
    static let labelIconButtonPrimary: Key = .init(name: "labelIconButtonPrimary")
    static let labelIconButtonSecondary: Key = .init(name: "labelIconButtonSecondary")
    static let labelIconButtonDisabled: Key = .init(name: "labelIconButtonDisabled")
    static let labelIconButtonOverlayDefault: Key = .init(name: "labelIconButtonOverlayDefault")
    static let labelIconButtonOverlayDisabled: Key = .init(name: "labelIconButtonOverlayDisabled")
    static let borderIconButtonPrimary: Key = .init(name: "borderIconButtonPrimary")
    static let borderIconButtonSecondary: Key = .init(name: "borderIconButtonSecondary")
    static let borderIconButtonDisabled: Key = .init(name: "borderIconButtonDisabled")
    static let interactiveIconButtonPrimary: Key = .init(name: "interactiveIconButtonPrimary")
    static let interactiveIconButtonSecondary: Key = .init(name: "interactiveIconButtonSecondary")
    static let interactiveIconButtonOverlay: Key = .init(name: "interactiveIconButtonOverlay")
    static let backgroundModalOverlayDefault: Key = .init(name: "backgroundModalOverlayDefault")
    static let backgroundModalOverlayRecs: Key = .init(name: "backgroundModalOverlayRecs")
    static let backgroundModalContainerDefault: Key = .init(name: "backgroundModalContainerDefault")
    static let foregroundModalHeading: Key = .init(name: "foregroundModalHeading")
    static let foregroundModalBody: Key = .init(name: "foregroundModalBody")
    static let foregroundModalIcon: Key = .init(name: "foregroundModalIcon")
    static let actionNavigationSecondaryDisabled: Key = .init(name: "actionNavigationSecondaryDisabled")
    static let iconNavigationPrimaryInactive: Key = .init(name: "iconNavigationPrimaryInactive")
    static let iconNavigationSecondaryStart: Key = .init(name: "iconNavigationSecondaryStart")
    static let iconNavigationSecondaryEnd: Key = .init(name: "iconNavigationSecondaryEnd")
    static let backgroundPassionsShared: Key = .init(name: "backgroundPassionsShared")
    static let backgroundPassionsEdit: Key = .init(name: "backgroundPassionsEdit")
    static let backgroundPassionsInactiveOverlay: Key = .init(name: "backgroundPassionsInactiveOverlay")
    static let backgroundPassionsSharedOverlay: Key = .init(name: "backgroundPassionsSharedOverlay")
    static let backgroundPassionsSparksInactiveOverlay: Key = .init(name: "backgroundPassionsSparksInactiveOverlay")
    static let backgroundPassionsSparksInactive: Key = .init(name: "backgroundPassionsSparksInactive")
    static let borderPassionsActive: Key = .init(name: "borderPassionsActive")
    static let borderPassionsInactive: Key = .init(name: "borderPassionsInactive")
    static let borderPassionsShared: Key = .init(name: "borderPassionsShared")
    static let borderPassionsSharedOverlay: Key = .init(name: "borderPassionsSharedOverlay")
    static let textPassionsActive: Key = .init(name: "textPassionsActive")
    static let textPassionsInactive: Key = .init(name: "textPassionsInactive")
    static let textPassionsShared: Key = .init(name: "textPassionsShared")
    static let textPassionsSharedRec: Key = .init(name: "textPassionsSharedRec")
    static let textPassionsInactiveOverlay: Key = .init(name: "textPassionsInactiveOverlay")
    static let textPassionsSharedOverlay: Key = .init(name: "textPassionsSharedOverlay")
    static let backgroundProgressInactive: Key = .init(name: "backgroundProgressInactive")
    static let backgroundRadioSelectedEnabled: Key = .init(name: "backgroundRadioSelectedEnabled")
    static let backgroundRadioSelectedDisabled: Key = .init(name: "backgroundRadioSelectedDisabled")
    static let backgroundRadioUnselectedDisabled: Key = .init(name: "backgroundRadioUnselectedDisabled")
    static let borderRadioSelectedEnabled: Key = .init(name: "borderRadioSelectedEnabled")
    static let borderRadioSelectedDisabled: Key = .init(name: "borderRadioSelectedDisabled")
    static let borderRadioUnselectedEnabled: Key = .init(name: "borderRadioUnselectedEnabled")
    static let borderRadioUnselectedDisabled: Key = .init(name: "borderRadioUnselectedDisabled")
    static let iconRadioSelectedEnabled: Key = .init(name: "iconRadioSelectedEnabled")
    static let iconRadioSelectedDisabled: Key = .init(name: "iconRadioSelectedDisabled")
    static let backgroundRecCardContentHidden: Key = .init(name: "backgroundRecCardContentHidden")
    static let backgroundRecCardBottomDefault: Key = .init(name: "backgroundRecCardBottomDefault")
    static let backgroundRecCardBottomSuperLike: Key = .init(name: "backgroundRecCardBottomSuperLike")
    static let borderRecCardContentHidden: Key = .init(name: "borderRecCardContentHidden")
    static let iconRecCardContentHidden: Key = .init(name: "iconRecCardContentHidden")
    static let subCardRecCardSparks: Key = .init(name: "subCardRecCardSparks")
    static let textRecCardContentHidden: Key = .init(name: "textRecCardContentHidden")
    static let backgroundSearchDefault: Key = .init(name: "backgroundSearchDefault")
    static let cursorSearchInput: Key = .init(name: "cursorSearchInput")
    static let iconSearchStart: Key = .init(name: "iconSearchStart")
    static let iconSearchEndAction: Key = .init(name: "iconSearchEndAction")
    static let textSearchPlaceholderInactive: Key = .init(name: "textSearchPlaceholderInactive")
    static let textSearchInputActive: Key = .init(name: "textSearchInputActive")
    static let textSearchInputInactive: Key = .init(name: "textSearchInputInactive")
    static let iconSelectorSelectedEnabled: Key = .init(name: "iconSelectorSelectedEnabled")
    static let iconSelectorSelectedDisabled: Key = .init(name: "iconSelectorSelectedDisabled")
    static let backgroundSliderAltTrackEnabled: Key = .init(name: "backgroundSliderAltTrackEnabled")
    static let backgroundSliderAltTrackDisabled: Key = .init(name: "backgroundSliderAltTrackDisabled")
    static let backgroundSliderAltKnobEnabled: Key = .init(name: "backgroundSliderAltKnobEnabled")
    static let backgroundSliderAltKnobDisabled: Key = .init(name: "backgroundSliderAltKnobDisabled")
    static let backgroundSliderAltFillEnabled: Key = .init(name: "backgroundSliderAltFillEnabled")
    static let backgroundSliderAltFillDisabled: Key = .init(name: "backgroundSliderAltFillDisabled")
    static let backgroundSliderDefaultTrackEnabled: Key = .init(name: "backgroundSliderDefaultTrackEnabled")
    static let backgroundSliderDefaultTrackDisabled: Key = .init(name: "backgroundSliderDefaultTrackDisabled")
    static let backgroundSliderDefaultKnobEnabled: Key = .init(name: "backgroundSliderDefaultKnobEnabled")
    static let backgroundSliderDefaultKnobDisabled: Key = .init(name: "backgroundSliderDefaultKnobDisabled")
    static let backgroundSliderDefaultFillEnabled: Key = .init(name: "backgroundSliderDefaultFillEnabled")
    static let backgroundSliderDefaultFillDisabled: Key = .init(name: "backgroundSliderDefaultFillDisabled")
    static let borderSliderAltKnobEnabled: Key = .init(name: "borderSliderAltKnobEnabled")
    static let borderSliderAltKnobDisabled: Key = .init(name: "borderSliderAltKnobDisabled")
    static let borderSliderDefaultKnobEnabled: Key = .init(name: "borderSliderDefaultKnobEnabled")
    static let borderSliderDefaultKnobDisabled: Key = .init(name: "borderSliderDefaultKnobDisabled")
    static let backgroundSwitchAltTrackSelected: Key = .init(name: "backgroundSwitchAltTrackSelected")
    static let backgroundSwitchAltTrackUnselected: Key = .init(name: "backgroundSwitchAltTrackUnselected")
    static let backgroundSwitchAltTrackDisabled: Key = .init(name: "backgroundSwitchAltTrackDisabled")
    static let backgroundSwitchAltKnobSelected: Key = .init(name: "backgroundSwitchAltKnobSelected")
    static let backgroundSwitchAltKnobUnselected: Key = .init(name: "backgroundSwitchAltKnobUnselected")
    static let backgroundSwitchAltKnobDisabled: Key = .init(name: "backgroundSwitchAltKnobDisabled")
    static let backgroundSwitchDefaultTrackSelected: Key = .init(name: "backgroundSwitchDefaultTrackSelected")
    static let backgroundSwitchDefaultTrackUnselected: Key = .init(name: "backgroundSwitchDefaultTrackUnselected")
    static let backgroundSwitchDefaultTrackDisabled: Key = .init(name: "backgroundSwitchDefaultTrackDisabled")
    static let backgroundSwitchDefaultKnobSelected: Key = .init(name: "backgroundSwitchDefaultKnobSelected")
    static let backgroundSwitchDefaultKnobUnselected: Key = .init(name: "backgroundSwitchDefaultKnobUnselected")
    static let backgroundSwitchDefaultKnobDisabled: Key = .init(name: "backgroundSwitchDefaultKnobDisabled")
    static let borderSwitchAltTrackSelected: Key = .init(name: "borderSwitchAltTrackSelected")
    static let borderSwitchAltTrackUnselected: Key = .init(name: "borderSwitchAltTrackUnselected")
    static let borderSwitchAltTrackDisabled: Key = .init(name: "borderSwitchAltTrackDisabled")
    static let borderSwitchAltKnobSelected: Key = .init(name: "borderSwitchAltKnobSelected")
    static let borderSwitchAltKnobUnselected: Key = .init(name: "borderSwitchAltKnobUnselected")
    static let borderSwitchAltKnobDisabled: Key = .init(name: "borderSwitchAltKnobDisabled")
    static let borderSwitchDefaultTrackSelected: Key = .init(name: "borderSwitchDefaultTrackSelected")
    static let borderSwitchDefaultTrackUnselected: Key = .init(name: "borderSwitchDefaultTrackUnselected")
    static let borderSwitchDefaultTrackDisabled: Key = .init(name: "borderSwitchDefaultTrackDisabled")
    static let borderSwitchDefaultKnobSelected: Key = .init(name: "borderSwitchDefaultKnobSelected")
    static let borderSwitchDefaultKnobUnselected: Key = .init(name: "borderSwitchDefaultKnobUnselected")
    static let borderSwitchDefaultKnobDisabled: Key = .init(name: "borderSwitchDefaultKnobDisabled")
    static let iconSwitchAltSelected: Key = .init(name: "iconSwitchAltSelected")
    static let iconSwitchAltUnselected: Key = .init(name: "iconSwitchAltUnselected")
    static let iconSwitchAltDisabled: Key = .init(name: "iconSwitchAltDisabled")
    static let iconSwitchDefaultSelected: Key = .init(name: "iconSwitchDefaultSelected")
    static let iconSwitchDefaultUnselected: Key = .init(name: "iconSwitchDefaultUnselected")
    static let iconSwitchDefaultDisabled: Key = .init(name: "iconSwitchDefaultDisabled")
    static let backgroundTableRowDefault: Key = .init(name: "backgroundTableRowDefault")
    static let backgroundTableRowPressed: Key = .init(name: "backgroundTableRowPressed")
    static let backgroundTableRowHover: Key = .init(name: "backgroundTableRowHover")
    static let dividerTableRowDefault: Key = .init(name: "dividerTableRowDefault")
    static let dividerTableRowSparks: Key = .init(name: "dividerTableRowSparks")
    static let backgroundTappyIndicatorActive: Key = .init(name: "backgroundTappyIndicatorActive")
    static let backgroundTappyIndicatorInactive: Key = .init(name: "backgroundTappyIndicatorInactive")
    static let backgroundTappyIndicatorSparksActive: Key = .init(name: "backgroundTappyIndicatorSparksActive")
    static let backgroundTappyIndicatorSparksInactive: Key = .init(name: "backgroundTappyIndicatorSparksInactive")
    static let backgroundTappyContainerDefault: Key = .init(name: "backgroundTappyContainerDefault")
    static let backgroundTappySparks: Key = .init(name: "backgroundTappySparks")
    static let borderTappyIndicatorActive: Key = .init(name: "borderTappyIndicatorActive")
    static let borderTappyIndicatorInactive: Key = .init(name: "borderTappyIndicatorInactive")
    static let borderTappyIndicatorSparksActive: Key = .init(name: "borderTappyIndicatorSparksActive")
    static let borderTappyIndicatorSparksInactive: Key = .init(name: "borderTappyIndicatorSparksInactive")
    static let dividerTappySparks: Key = .init(name: "dividerTappySparks")
    static let actionTextFieldQuietInactive: Key = .init(name: "actionTextFieldQuietInactive")
    static let actionTextFieldQuietActive: Key = .init(name: "actionTextFieldQuietActive")
    static let actionTextFieldLoudInactive: Key = .init(name: "actionTextFieldLoudInactive")
    static let actionTextFieldLoudActive: Key = .init(name: "actionTextFieldLoudActive")
    static let backgroundTextFieldQuietDefault: Key = .init(name: "backgroundTextFieldQuietDefault")
    static let backgroundTextFieldQuietHighlight: Key = .init(name: "backgroundTextFieldQuietHighlight")
    static let backgroundTextFieldLoudDefault: Key = .init(name: "backgroundTextFieldLoudDefault")
    static let backgroundTextFieldLoudHighlight: Key = .init(name: "backgroundTextFieldLoudHighlight")
    static let borderTextFieldQuietDefault: Key = .init(name: "borderTextFieldQuietDefault")
    static let borderTextFieldQuietError: Key = .init(name: "borderTextFieldQuietError")
    static let borderTextFieldQuietFocus: Key = .init(name: "borderTextFieldQuietFocus")
    static let borderTextFieldQuietDisabled: Key = .init(name: "borderTextFieldQuietDisabled")
    static let borderTextFieldLoudDefault: Key = .init(name: "borderTextFieldLoudDefault")
    static let borderTextFieldLoudError: Key = .init(name: "borderTextFieldLoudError")
    static let borderTextFieldLoudFocus: Key = .init(name: "borderTextFieldLoudFocus")
    static let borderTextFieldLoudDisabled: Key = .init(name: "borderTextFieldLoudDisabled")
    static let cursorTextFieldQuietDefault: Key = .init(name: "cursorTextFieldQuietDefault")
    static let cursorTextFieldLoudDefault: Key = .init(name: "cursorTextFieldLoudDefault")
    static let textTextFieldQuietCharactercountDefault: Key = .init(name: "textTextFieldQuietCharactercountDefault")
    static let textTextFieldLoudCharactercountDefault: Key = .init(name: "textTextFieldLoudCharactercountDefault")
    static let textTextFieldQuietLabelOptional: Key = .init(name: "textTextFieldQuietLabelOptional")
    static let textTextFieldQuietLabelError: Key = .init(name: "textTextFieldQuietLabelError")
    static let textTextFieldLoudLabelOptional: Key = .init(name: "textTextFieldLoudLabelOptional")
    static let textTextFieldLoudLabelError: Key = .init(name: "textTextFieldLoudLabelError")
    static let textTextFieldQuietPlaceholderDefault: Key = .init(name: "textTextFieldQuietPlaceholderDefault")
    static let textTextFieldLoudPlaceholderDefault: Key = .init(name: "textTextFieldLoudPlaceholderDefault")
    static let textTextFieldQuietInputDefault: Key = .init(name: "textTextFieldQuietInputDefault")
    static let textTextFieldQuietInputDisabled: Key = .init(name: "textTextFieldQuietInputDisabled")
    static let textTextFieldLoudInputDefault: Key = .init(name: "textTextFieldLoudInputDefault")
    static let textTextFieldLoudInputDisabled: Key = .init(name: "textTextFieldLoudInputDisabled")
    static let backgroundToastDefault: Key = .init(name: "backgroundToastDefault")
    static let backgroundTooltipDefault: Key = .init(name: "backgroundTooltipDefault")
    static let backgroundTooltipRevenueDefault: Key = .init(name: "backgroundTooltipRevenueDefault")
    static let backgroundTooltipTrustDefault: Key = .init(name: "backgroundTooltipTrustDefault")
    static let borderTooltipDefault: Key = .init(name: "borderTooltipDefault")
    static let borderTooltipRevenueBoost: Key = .init(name: "borderTooltipRevenueBoost")
    static let borderTooltipRevenueNope: Key = .init(name: "borderTooltipRevenueNope")
    static let borderTooltipRevenueLike: Key = .init(name: "borderTooltipRevenueLike")
    static let borderTooltipRevenueSuperLike: Key = .init(name: "borderTooltipRevenueSuperLike")
    static let borderTooltipRevenueRewind: Key = .init(name: "borderTooltipRevenueRewind")
    static let iconTooltipDismiss: Key = .init(name: "iconTooltipDismiss")
    static let textTooltipDefault: Key = .init(name: "textTooltipDefault")
    static let textTooltipRevenueDefault: Key = .init(name: "textTooltipRevenueDefault")
    static let textTooltipTrustDefault: Key = .init(name: "textTooltipTrustDefault")
    static let accentPrimary: Key = .init(name: "accentPrimary")
    static let accentPrimaryA11y: Key = .init(name: "accentPrimaryA11y")
    static let accentBrand: Key = .init(name: "accentBrand")
    static let accentLike: Key = .init(name: "accentLike")
    static let accentNope: Key = .init(name: "accentNope")
    static let accentSuperLike: Key = .init(name: "accentSuperLike")
    static let accentBoost: Key = .init(name: "accentBoost")
    static let accentRewind: Key = .init(name: "accentRewind")
    static let accentGold: Key = .init(name: "accentGold")
    static let accentPlatinum: Key = .init(name: "accentPlatinum")
    static let accentSelect: Key = .init(name: "accentSelect")
    static let accentError: Key = .init(name: "accentError")
    static let accentSuccess: Key = .init(name: "accentSuccess")
    static let accentActive: Key = .init(name: "accentActive")
    static let accentLink: Key = .init(name: "accentLink")
    static let accentChat: Key = .init(name: "accentChat")
    static let accentTrust: Key = .init(name: "accentTrust")
    static let accentBlue: Key = .init(name: "accentBlue")
    static let accentFuchsia: Key = .init(name: "accentFuchsia")
    static let accentGreen: Key = .init(name: "accentGreen")
    static let accentPurple: Key = .init(name: "accentPurple")
    static let accentRed: Key = .init(name: "accentRed")
    static let accentTeal: Key = .init(name: "accentTeal")
    static let accentYellowOrange: Key = .init(name: "accentYellowOrange")
    static let actionActive: Key = .init(name: "actionActive")
    static let actionInactive: Key = .init(name: "actionInactive")
    static let backgroundPrimary: Key = .init(name: "backgroundPrimary")
    static let backgroundPrimaryInverse: Key = .init(name: "backgroundPrimaryInverse")
    static let backgroundSecondary: Key = .init(name: "backgroundSecondary")
    static let backgroundSecondaryInverse: Key = .init(name: "backgroundSecondaryInverse")
    static let backgroundTertiary: Key = .init(name: "backgroundTertiary")
    static let backgroundTertiaryInverse: Key = .init(name: "backgroundTertiaryInverse")
    static let backgroundInactive: Key = .init(name: "backgroundInactive")
    static let backgroundPrimaryStaticLight: Key = .init(name: "backgroundPrimaryStaticLight")
    static let backgroundPrimaryStaticDark: Key = .init(name: "backgroundPrimaryStaticDark")
    static let backgroundSecondaryStaticLight: Key = .init(name: "backgroundSecondaryStaticLight")
    static let backgroundSecondaryStaticDark: Key = .init(name: "backgroundSecondaryStaticDark")
    static let backgroundOverlayPrimary: Key = .init(name: "backgroundOverlayPrimary")
    static let backgroundOverlaySecondary: Key = .init(name: "backgroundOverlaySecondary")
    static let backgroundBrand: Key = .init(name: "backgroundBrand")
    static let backgroundError: Key = .init(name: "backgroundError")
    static let backgroundDisabled: Key = .init(name: "backgroundDisabled")
    static let backgroundReadReceiptsBadge: Key = .init(name: "backgroundReadReceiptsBadge")
    static let backgroundGreen: Key = .init(name: "backgroundGreen")
    static let backgroundTeal: Key = .init(name: "backgroundTeal")
    static let backgroundBlue: Key = .init(name: "backgroundBlue")
    static let backgroundPurple: Key = .init(name: "backgroundPurple")
    static let backgroundFuchsia: Key = .init(name: "backgroundFuchsia")
    static let backgroundRed: Key = .init(name: "backgroundRed")
    static let backgroundYellowOrange: Key = .init(name: "backgroundYellowOrange")
    static let backgroundVault: Key = .init(name: "backgroundVault")
    static let backgroundCardDefault: Key = .init(name: "backgroundCardDefault")
    static let backgroundCardSparks: Key = .init(name: "backgroundCardSparks")
    static let backgroundMenuDefault: Key = .init(name: "backgroundMenuDefault")
    static let backgroundHeaderSparks: Key = .init(name: "backgroundHeaderSparks")
    static let backgroundRippleDefault: Key = .init(name: "backgroundRippleDefault")
    static let backgroundSparksProfile: Key = .init(name: "backgroundSparksProfile")
    static let backgroundSparksTopNav: Key = .init(name: "backgroundSparksTopNav")
    static let backgroundSparksBottomNav: Key = .init(name: "backgroundSparksBottomNav")
    static let backgroundSparksPrompt: Key = .init(name: "backgroundSparksPrompt")
    static let backgroundTrust: Key = .init(name: "backgroundTrust")
    static let borderPrimary: Key = .init(name: "borderPrimary")
    static let borderPrimaryInverse: Key = .init(name: "borderPrimaryInverse")
    static let borderSecondary: Key = .init(name: "borderSecondary")
    static let borderSecondaryOverlay: Key = .init(name: "borderSecondaryOverlay")
    static let borderDisabled: Key = .init(name: "borderDisabled")
    static let borderOverlay: Key = .init(name: "borderOverlay")
    static let borderBrand: Key = .init(name: "borderBrand")
    static let borderGold: Key = .init(name: "borderGold")
    static let borderPlatinum: Key = .init(name: "borderPlatinum")
    static let borderRewind: Key = .init(name: "borderRewind")
    static let borderLike: Key = .init(name: "borderLike")
    static let borderSuperLike: Key = .init(name: "borderSuperLike")
    static let borderBoost: Key = .init(name: "borderBoost")
    static let borderNope: Key = .init(name: "borderNope")
    static let borderFocusDefault: Key = .init(name: "borderFocusDefault")
    static let borderFocusOverlay: Key = .init(name: "borderFocusOverlay")
    static let borderFocusInverse: Key = .init(name: "borderFocusInverse")
    static let borderError: Key = .init(name: "borderError")
    static let borderSuccess: Key = .init(name: "borderSuccess")
    static let borderActive: Key = .init(name: "borderActive")
    static let borderContainerElevated: Key = .init(name: "borderContainerElevated")
    static let borderVault: Key = .init(name: "borderVault")
    static let borderTimerExpired: Key = .init(name: "borderTimerExpired")
    static let borderSparksLike: Key = .init(name: "borderSparksLike")
    static let borderSparksNope: Key = .init(name: "borderSparksNope")
    static let borderSparksSuperLike: Key = .init(name: "borderSparksSuperLike")
    static let borderSparksBoost: Key = .init(name: "borderSparksBoost")
    static let borderSparksRewind: Key = .init(name: "borderSparksRewind")
    static let cursorDefault: Key = .init(name: "cursorDefault")
    static let deviceHomeIndicator: Key = .init(name: "deviceHomeIndicator")
    static let deviceStatusBar: Key = .init(name: "deviceStatusBar")
    static let deviceStatusBarInverse: Key = .init(name: "deviceStatusBarInverse")
    static let dividerPrimary: Key = .init(name: "dividerPrimary")
    static let dividerSparks: Key = .init(name: "dividerSparks")
    static let foregroundPrimaryStaticOnDark: Key = .init(name: "foregroundPrimaryStaticOnDark")
    static let foregroundPrimary: Key = .init(name: "foregroundPrimary")
    static let foregroundPrimaryInverse: Key = .init(name: "foregroundPrimaryInverse")
    static let foregroundSecondary: Key = .init(name: "foregroundSecondary")
    static let foregroundSecondaryInverse: Key = .init(name: "foregroundSecondaryInverse")
    static let foregroundInactive: Key = .init(name: "foregroundInactive")
    static let foregroundDisabled: Key = .init(name: "foregroundDisabled")
    static let foregroundPrimaryStaticLight: Key = .init(name: "foregroundPrimaryStaticLight")
    static let foregroundPrimaryStaticDark: Key = .init(name: "foregroundPrimaryStaticDark")
    static let foregroundSecondaryStaticLight: Key = .init(name: "foregroundSecondaryStaticLight")
    static let foregroundSecondaryStaticDark: Key = .init(name: "foregroundSecondaryStaticDark")
    static let foregroundBorderPrimary: Key = .init(name: "foregroundBorderPrimary")
    static let foregroundBorderSecondary: Key = .init(name: "foregroundBorderSecondary")
    static let foregroundBorderElevated: Key = .init(name: "foregroundBorderElevated")
    static let foregroundReadReceiptsBadge: Key = .init(name: "foregroundReadReceiptsBadge")
    static let foregroundGreen: Key = .init(name: "foregroundGreen")
    static let foregroundTeal: Key = .init(name: "foregroundTeal")
    static let foregroundBlue: Key = .init(name: "foregroundBlue")
    static let foregroundPurple: Key = .init(name: "foregroundPurple")
    static let foregroundFuchsia: Key = .init(name: "foregroundFuchsia")
    static let foregroundRed: Key = .init(name: "foregroundRed")
    static let foregroundYellowOrange: Key = .init(name: "foregroundYellowOrange")
    static let iconPrimary: Key = .init(name: "iconPrimary")
    static let iconSecondary: Key = .init(name: "iconSecondary")
    static let iconPrimaryInverse: Key = .init(name: "iconPrimaryInverse")
    static let iconSecondaryInverse: Key = .init(name: "iconSecondaryInverse")
    static let iconDisabled: Key = .init(name: "iconDisabled")
    static let iconPrimaryOverlay: Key = .init(name: "iconPrimaryOverlay")
    static let iconPrimaryOverlayInverse: Key = .init(name: "iconPrimaryOverlayInverse")
    static let iconBrand: Key = .init(name: "iconBrand")
    static let iconTrust: Key = .init(name: "iconTrust")
    static let iconSuccess: Key = .init(name: "iconSuccess")
    static let iconError: Key = .init(name: "iconError")
    static let iconChatHeartDefault: Key = .init(name: "iconChatHeartDefault")
    static let iconChatHeartActive: Key = .init(name: "iconChatHeartActive")
    static let iconChatDrawerContactCardDefault: Key = .init(name: "iconChatDrawerContactCardDefault")
    static let iconChatDrawerContactCardActive: Key = .init(name: "iconChatDrawerContactCardActive")
    static let iconChatDrawerGifForegroundDefault: Key = .init(name: "iconChatDrawerGifForegroundDefault")
    static let iconChatDrawerGifBackgroundDefault: Key = .init(name: "iconChatDrawerGifBackgroundDefault")
    static let iconChatDrawerGifForegroundActive: Key = .init(name: "iconChatDrawerGifForegroundActive")
    static let iconChatDrawerGifBackgroundActive: Key = .init(name: "iconChatDrawerGifBackgroundActive")
    static let iconChatDrawerStickerDefault: Key = .init(name: "iconChatDrawerStickerDefault")
    static let iconChatDrawerStickerActive: Key = .init(name: "iconChatDrawerStickerActive")
    static let iconChatDrawerSpotifyForegroundDefault: Key = .init(name: "iconChatDrawerSpotifyForegroundDefault")
    static let iconChatDrawerSpotifyBackgroundDefault: Key = .init(name: "iconChatDrawerSpotifyBackgroundDefault")
    static let iconChatDrawerSpotifyForegroundActive: Key = .init(name: "iconChatDrawerSpotifyForegroundActive")
    static let iconChatDrawerSpotifyBackgroundActive: Key = .init(name: "iconChatDrawerSpotifyBackgroundActive")
    static let iconChatDrawerNoonlightForegroundDefault: Key = .init(name: "iconChatDrawerNoonlightForegroundDefault")
    static let iconChatDrawerNoonlightBackgroundDefault: Key = .init(name: "iconChatDrawerNoonlightBackgroundDefault")
    static let iconChatDrawerNoonlightForegroundActive: Key = .init(name: "iconChatDrawerNoonlightForegroundActive")
    static let iconChatDrawerNoonlightBackgroundActive: Key = .init(name: "iconChatDrawerNoonlightBackgroundActive")
    static let iconChatDrawerVibesDefault: Key = .init(name: "iconChatDrawerVibesDefault")
    static let iconVault: Key = .init(name: "iconVault")
    static let interactivePrimary: Key = .init(name: "interactivePrimary")
    static let interactiveSecondary: Key = .init(name: "interactiveSecondary")
    static let interactiveOnLight: Key = .init(name: "interactiveOnLight")
    static let loaderShimmerBaseDefault: Key = .init(name: "loaderShimmerBaseDefault")
    static let loaderShimmerHighlightDefault: Key = .init(name: "loaderShimmerHighlightDefault")
    static let loaderSkeleton: Key = .init(name: "loaderSkeleton")
    static let overlayDefault: Key = .init(name: "overlayDefault")
    static let shadowContainerElevated: Key = .init(name: "shadowContainerElevated")
    static let textPrimary: Key = .init(name: "textPrimary")
    static let textPrimaryInverse: Key = .init(name: "textPrimaryInverse")
    static let textSecondary: Key = .init(name: "textSecondary")
    static let textSecondaryInverse: Key = .init(name: "textSecondaryInverse")
    static let textInactive: Key = .init(name: "textInactive")
    static let textPrimaryOverlay: Key = .init(name: "textPrimaryOverlay")
    static let textPrimaryOverlayInverse: Key = .init(name: "textPrimaryOverlayInverse")
    static let textSecondaryOverlay: Key = .init(name: "textSecondaryOverlay")
    static let textSecondaryOverlayInverse: Key = .init(name: "textSecondaryOverlayInverse")
    static let textError: Key = .init(name: "textError")
    static let textLink: Key = .init(name: "textLink")
    static let textGold: Key = .init(name: "textGold")
    static let textLike: Key = .init(name: "textLike")
    static let textSuperLike: Key = .init(name: "textSuperLike")
    static let textBoost: Key = .init(name: "textBoost")
    static let textSuperBoost: Key = .init(name: "textSuperBoost")
    static let textSuccess: Key = .init(name: "textSuccess")
    static let textDisabled: Key = .init(name: "textDisabled")
    static let textLinkOverlay: Key = .init(name: "textLinkOverlay")
    static let textHighlightForeground: Key = .init(name: "textHighlightForeground")
    static let textHighlightBackground: Key = .init(name: "textHighlightBackground")
    static let textBrandNormal: Key = .init(name: "textBrandNormal")
    static let textBrandLarge: Key = .init(name: "textBrandLarge")
    static let textVaultNormal: Key = .init(name: "textVaultNormal")
    static let textVaultLarge: Key = .init(name: "textVaultLarge")
    static let textTrust: Key = .init(name: "textTrust")
    static let transparent: Key = .init(name: "transparent")
    static let white: Key = .init(name: "white")
    static let black: Key = .init(name: "black")
    static let gray10: Key = .init(name: "gray10")
    static let gray15: Key = .init(name: "gray15")
    static let gray20: Key = .init(name: "gray20")
    static let gray30: Key = .init(name: "gray30")
    static let gray40: Key = .init(name: "gray40")
    static let gray50: Key = .init(name: "gray50")
    static let gray60: Key = .init(name: "gray60")
    static let gray70: Key = .init(name: "gray70")
    static let gray80: Key = .init(name: "gray80")
    static let gray90: Key = .init(name: "gray90")
    static let gray95: Key = .init(name: "gray95")
    static let gray05: Key = .init(name: "gray05")
    static let green10: Key = .init(name: "green10")
    static let green15: Key = .init(name: "green15")
    static let green20: Key = .init(name: "green20")
    static let green30: Key = .init(name: "green30")
    static let green40: Key = .init(name: "green40")
    static let green50: Key = .init(name: "green50")
    static let green60: Key = .init(name: "green60")
    static let green70: Key = .init(name: "green70")
    static let green80: Key = .init(name: "green80")
    static let green90: Key = .init(name: "green90")
    static let green95: Key = .init(name: "green95")
    static let green05: Key = .init(name: "green05")
    static let teal10: Key = .init(name: "teal10")
    static let teal15: Key = .init(name: "teal15")
    static let teal20: Key = .init(name: "teal20")
    static let teal30: Key = .init(name: "teal30")
    static let teal40: Key = .init(name: "teal40")
    static let teal50: Key = .init(name: "teal50")
    static let teal60: Key = .init(name: "teal60")
    static let teal70: Key = .init(name: "teal70")
    static let teal80: Key = .init(name: "teal80")
    static let teal90: Key = .init(name: "teal90")
    static let teal95: Key = .init(name: "teal95")
    static let teal05: Key = .init(name: "teal05")
    static let blue10: Key = .init(name: "blue10")
    static let blue15: Key = .init(name: "blue15")
    static let blue20: Key = .init(name: "blue20")
    static let blue30: Key = .init(name: "blue30")
    static let blue40: Key = .init(name: "blue40")
    static let blue50: Key = .init(name: "blue50")
    static let blue60: Key = .init(name: "blue60")
    static let blue70: Key = .init(name: "blue70")
    static let blue80: Key = .init(name: "blue80")
    static let blue90: Key = .init(name: "blue90")
    static let blue95: Key = .init(name: "blue95")
    static let blue05: Key = .init(name: "blue05")
    static let purple10: Key = .init(name: "purple10")
    static let purple15: Key = .init(name: "purple15")
    static let purple20: Key = .init(name: "purple20")
    static let purple30: Key = .init(name: "purple30")
    static let purple40: Key = .init(name: "purple40")
    static let purple50: Key = .init(name: "purple50")
    static let purple60: Key = .init(name: "purple60")
    static let purple70: Key = .init(name: "purple70")
    static let purple80: Key = .init(name: "purple80")
    static let purple90: Key = .init(name: "purple90")
    static let purple95: Key = .init(name: "purple95")
    static let purple05: Key = .init(name: "purple05")
    static let fuchsia10: Key = .init(name: "fuchsia10")
    static let fuchsia15: Key = .init(name: "fuchsia15")
    static let fuchsia20: Key = .init(name: "fuchsia20")
    static let fuchsia30: Key = .init(name: "fuchsia30")
    static let fuchsia40: Key = .init(name: "fuchsia40")
    static let fuchsia50: Key = .init(name: "fuchsia50")
    static let fuchsia60: Key = .init(name: "fuchsia60")
    static let fuchsia70: Key = .init(name: "fuchsia70")
    static let fuchsia80: Key = .init(name: "fuchsia80")
    static let fuchsia90: Key = .init(name: "fuchsia90")
    static let fuchsia95: Key = .init(name: "fuchsia95")
    static let fuchsia05: Key = .init(name: "fuchsia05")
    static let red10: Key = .init(name: "red10")
    static let red15: Key = .init(name: "red15")
    static let red20: Key = .init(name: "red20")
    static let red30: Key = .init(name: "red30")
    static let red40: Key = .init(name: "red40")
    static let red50: Key = .init(name: "red50")
    static let red60: Key = .init(name: "red60")
    static let red70: Key = .init(name: "red70")
    static let red80: Key = .init(name: "red80")
    static let red90: Key = .init(name: "red90")
    static let red95: Key = .init(name: "red95")
    static let red05: Key = .init(name: "red05")
    static let yellowOrange10: Key = .init(name: "yellowOrange10")
    static let yellowOrange15: Key = .init(name: "yellowOrange15")
    static let yellowOrange20: Key = .init(name: "yellowOrange20")
    static let yellowOrange30: Key = .init(name: "yellowOrange30")
    static let yellowOrange40: Key = .init(name: "yellowOrange40")
    static let yellowOrange50: Key = .init(name: "yellowOrange50")
    static let yellowOrange60: Key = .init(name: "yellowOrange60")
    static let yellowOrange70: Key = .init(name: "yellowOrange70")
    static let yellowOrange80: Key = .init(name: "yellowOrange80")
    static let yellowOrange90: Key = .init(name: "yellowOrange90")
    static let yellowOrange95: Key = .init(name: "yellowOrange95")
    static let yellowOrange05: Key = .init(name: "yellowOrange05")
    static let gold10: Key = .init(name: "gold10")
    static let gold15: Key = .init(name: "gold15")
    static let gold20: Key = .init(name: "gold20")
    static let gold30: Key = .init(name: "gold30")
    static let gold40: Key = .init(name: "gold40")
    static let gold50: Key = .init(name: "gold50")
    static let gold60: Key = .init(name: "gold60")
    static let gold70: Key = .init(name: "gold70")
    static let gold80: Key = .init(name: "gold80")
    static let gold90: Key = .init(name: "gold90")
    static let gold95: Key = .init(name: "gold95")
    static let gold05: Key = .init(name: "gold05")
    static let brandPrimary: Key = .init(name: "brandPrimary")
    static let brandPrimaryA11y: Key = .init(name: "brandPrimaryA11y")
    static let brandGradientStart: Key = .init(name: "brandGradientStart")
    static let brandGradientEnd: Key = .init(name: "brandGradientEnd")
    static let thirdPartySpotifyPrimary: Key = .init(name: "thirdPartySpotifyPrimary")
    static let thirdPartySpotifyPrimaryInverse: Key = .init(name: "thirdPartySpotifyPrimaryInverse")
    static let thirdPartyNoonlightPrimary: Key = .init(name: "thirdPartyNoonlightPrimary")
    static let thirdPartyNoonlightSecondary: Key = .init(name: "thirdPartyNoonlightSecondary")
    static let thirdPartyFacebookPrimary: Key = .init(name: "thirdPartyFacebookPrimary")
    static let thirdPartyLinePrimary: Key = .init(name: "thirdPartyLinePrimary")
    static let thirdPartyLineA11y: Key = .init(name: "thirdPartyLineA11y")
    static let vaultIndigo20: Key = .init(name: "vaultIndigo20")
    static let vaultIndigo95: Key = .init(name: "vaultIndigo95")
    static let vaultPrimary: Key = .init(name: "vaultPrimary")
    static let vaultPrimaryLight: Key = .init(name: "vaultPrimaryLight")
    static let matchExpirationPrimary: Key = .init(name: "matchExpirationPrimary")
    static let matchExpirationSecondary: Key = .init(name: "matchExpirationSecondary")
    static let matchExpirationPrimaryOnDark: Key = .init(name: "matchExpirationPrimaryOnDark")
    static let sparksGrayBlue15: Key = .init(name: "sparksGrayBlue15")
    static let sparksGrayBlue30: Key = .init(name: "sparksGrayBlue30")
    static let sparksGrayBlue80: Key = .init(name: "sparksGrayBlue80")
    static let sparksGrayBlue90: Key = .init(name: "sparksGrayBlue90")
    static let sparksYellow20: Key = .init(name: "sparksYellow20")
    static let sparksYellow30: Key = .init(name: "sparksYellow30")
    static let sparksOrange50: Key = .init(name: "sparksOrange50")
    static let sparksRed60: Key = .init(name: "sparksRed60")
    static let sparksTeal20: Key = .init(name: "sparksTeal20")
    static let sparksBlue50: Key = .init(name: "sparksBlue50")
    static let sparksBlue70: Key = .init(name: "sparksBlue70")
    static let sparksGreen20: Key = .init(name: "sparksGreen20")
    static let sparksGreen30: Key = .init(name: "sparksGreen30")
    static let sparksGreen40: Key = .init(name: "sparksGreen40")
    static let sparksPurple60: Key = .init(name: "sparksPurple60")
    static let sparksPink45: Key = .init(name: "sparksPink45")
    static let opacityBlack10: Key = .init(name: "opacityBlack10")
    static let opacityBlack15: Key = .init(name: "opacityBlack15")
    static let opacityBlack20: Key = .init(name: "opacityBlack20")
    static let opacityBlack30: Key = .init(name: "opacityBlack30")
    static let opacityBlack40: Key = .init(name: "opacityBlack40")
    static let opacityBlack50: Key = .init(name: "opacityBlack50")
    static let opacityBlack60: Key = .init(name: "opacityBlack60")
    static let opacityBlack70: Key = .init(name: "opacityBlack70")
    static let opacityBlack80: Key = .init(name: "opacityBlack80")
    static let opacityBlack90: Key = .init(name: "opacityBlack90")
    static let opacityBlack95: Key = .init(name: "opacityBlack95")
    static let opacityBlack05: Key = .init(name: "opacityBlack05")
    static let opacityWhite10: Key = .init(name: "opacityWhite10")
    static let opacityWhite15: Key = .init(name: "opacityWhite15")
    static let opacityWhite20: Key = .init(name: "opacityWhite20")
    static let opacityWhite30: Key = .init(name: "opacityWhite30")
    static let opacityWhite40: Key = .init(name: "opacityWhite40")
    static let opacityWhite50: Key = .init(name: "opacityWhite50")
    static let opacityWhite60: Key = .init(name: "opacityWhite60")
    static let opacityWhite70: Key = .init(name: "opacityWhite70")
    static let opacityWhite80: Key = .init(name: "opacityWhite80")
    static let opacityWhite90: Key = .init(name: "opacityWhite90")
    static let opacityWhite95: Key = .init(name: "opacityWhite95")
    static let opacityWhite05: Key = .init(name: "opacityWhite05")
}
